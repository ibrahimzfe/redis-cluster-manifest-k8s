---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"

    # Ensure nodes.conf exists
    if [ ! -f "$REDIS_NODES" ]; then
      touch "$REDIS_NODES"
    fi

    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"

  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage yes
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 2
    cluster-replica-validity-factor 2
    appendonly yes
    protected-mode yes
    requirepass ADDPASSWORD
    masterauth ADDPASSWORD
    tls-port 6380
    port 0
    tls-cert-file /tls/redis.crt
    tls-key-file /tls/redis.key
    tls-ca-cert-file /tls/ca.crt
    tls-auth-clients yes

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: 9  # 3 Master + 6 Replica
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - redis-cluster
                topologyKey: "kubernetes.io/hostname"
      containers:
      - name: redis
        image: ibrahimzfe/redis-oss7-patch:1.0
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        - containerPort: 6380
          name: tls
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: tls
          mountPath: /tls
          readOnly: true
        - name: data
          mountPath: /data
          readOnly: false
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
      volumes:
      - name: conf
        configMap:
          name: redis-cluster
          defaultMode: 0755
      - name: tls
        secret:
          secretName: redis-tls
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  - port: 6380
    targetPort: 6380
    name: tls
  selector:
    app: redis-cluster
